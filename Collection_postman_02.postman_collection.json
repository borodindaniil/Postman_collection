{
	"info": {
		"_postman_id": "21fbd522-4a2f-400a-8a7d-fb397e6166f8",
		"name": "Collection_postman_02",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20093986"
	},
	"item": [
		{
			"name": "first_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body have correct string\", function () {\r",
							"    pm.expect(pm.response.text()).to.be.equal(\"This is the first responce from server!ss\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": [
				{
					"name": "Correct string",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/first",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"first"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/html; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "41"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Jan 2023 09:05:36 GMT"
						}
					],
					"cookie": [],
					"body": "This is the first responce from server!ss"
				}
			]
		},
		{
			"name": "user_info_3_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let req_f = request.data\r",
							"let req_age = +req_f.age\r",
							"let req_name = req_f.name\r",
							"let req_salary = +req_f.salary\r",
							"let resp_f = pm.response.json()\r",
							"let resp_age = +resp_f.age\r",
							"let resp_name = resp_f.name\r",
							"let resp_salary = +resp_f.salary\r",
							"let resp_u_salary = +resp_f.family.u_salary_1_5_year\r",
							"\r",
							"pm.test(\"Param age is 47\", function () {\r",
							"    pm.expect(req_age).to.eql(47);\r",
							"});\r",
							"\r",
							"pm.test(\"Param name is Joseph\", function () {\r",
							"    pm.expect(req_name).to.eql(\"Joseph\");\r",
							"});\r",
							"\r",
							"pm.test(\"Param salary is 1200\", function () {\r",
							"    pm.expect(req_salary).to.eql(1200);\r",
							"});\r",
							"\r",
							"pm.test(\"Param age is matches\", function () {\r",
							"    pm.expect(req_age).to.eql(resp_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Param name is matches\", function () {\r",
							"    pm.expect(req_name).to.eql(resp_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Param salary is matches\", function () {\r",
							"    pm.expect(req_salary).to.eql(resp_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary of 1.5 year calculated correctly\", function () {\r",
							"    pm.expect(resp_u_salary).to.equal(4 * req_f.salary)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Joseph",
							"type": "text"
						},
						{
							"key": "age",
							"value": "47",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1200",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": [
				{
					"name": "user_info_3_test",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "Joseph",
									"type": "text"
								},
								{
									"key": "age",
									"value": "47",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "1200",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_3",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_3"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "224"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Jan 2023 10:38:16 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"47\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"u_salary_1_5_year\": 4800\n    },\n    \"name\": \"Joseph\",\n    \"salary\": 1200\n}"
				}
			]
		},
		{
			"name": "object_info_3_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_f = pm.request.url.query.toObject()\r",
							"let resp_f = pm.response.json()\r",
							"let req_name = req_f.name\r",
							"let resp_name = resp_f.name\r",
							"let req_age = req_f.age\r",
							"let resp_age = resp_f.age\r",
							"let req_salary = +req_f.salary\r",
							"let resp_salary = +resp_f.salary\r",
							"let resp_dog = resp_f.family.pets.dog\r",
							"let resp_dog_name = resp_f.family.pets.dog.name\r",
							"let resp_dog_age = +resp_f.family.pets.dog.age\r",
							"\r",
							"pm.test(\"Params name is matches\", function () {\r",
							"    pm.expect(req_name).to.be.equal(resp_name)\r",
							"});\r",
							"\r",
							"pm.test(\"Params age is matches\", function () {\r",
							"    pm.expect(req_age).to.be.eql(resp_age)\r",
							"});\r",
							"\r",
							"pm.test(\"Params age is matches\", function () {\r",
							"    pm.expect(req_salary).to.be.eql(resp_salary)\r",
							"});\r",
							"\r",
							"console.log(resp_f.family)\r",
							"\r",
							"pm.test(\"Dog has param name\", function () {\r",
							"    pm.expect(resp_dog).to.have.property(\"name\")\r",
							"})\r",
							"\r",
							"pm.test(\"Dog has param age\", function () {\r",
							"    pm.expect(resp_dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dogs name is Luky\", function () {\r",
							"    pm.expect(resp_dog_name).to.be.eql(\"Luky\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dogs age is 4\", function () {\r",
							"    pm.expect(resp_dog_age).to.be.eql(4)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Luis&age=33&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Luis"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": [
				{
					"name": "object_info_3_test",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_3?name=Luis&age=33&salary=1500",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_3"
							],
							"query": [
								{
									"key": "name",
									"value": "Luis"
								},
								{
									"key": "age",
									"value": "33"
								},
								{
									"key": "salary",
									"value": "1500"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "377"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Tue, 03 Jan 2023 16:11:58 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": \"33\",\n    \"family\": {\n        \"children\": [\n            [\n                \"Alex\",\n                24\n            ],\n            [\n                \"Kate\",\n                12\n            ]\n        ],\n        \"pets\": {\n            \"cat\": {\n                \"age\": 3,\n                \"name\": \"Sunny\"\n            },\n            \"dog\": {\n                \"age\": 4,\n                \"name\": \"Luky\"\n            }\n        },\n        \"u_salary_1_5_year\": 6000\n    },\n    \"name\": \"Luis\",\n    \"salary\": 1500\n}"
				}
			]
		},
		{
			"name": "object_info_4_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let req_f = pm.request.url.query.toObject()\r",
							"let resp_f = pm.response.json()\r",
							"let req_name = req_f.name\r",
							"let req_age = +req_f.age\r",
							"let req_salary = +req_f.salary\r",
							"let resp_name = req_f.name\r",
							"let resp_age = +req_f.age\r",
							"let resp_salary = resp_f.salary\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Param name is matches\", function () {\r",
							"    pm.expect(req_name).to.be.eql(resp_name)\r",
							"});\r",
							"\r",
							"pm.test(\"Param age is matches\", function () {\r",
							"    pm.expect(req_age).to.be.eql(resp_age)\r",
							"});\r",
							"\r",
							"console.log(req_salary)\r",
							"console.log(+resp_salary[0])\r",
							"console.log(+resp_salary[0])\r",
							"console.log(+resp_salary[1])\r",
							"console.log(+resp_salary[2])\r",
							"\r",
							"pm.test(\"Param salary is matches\", function () {\r",
							"    pm.expect(req_salary).to.be.eql(+resp_salary[0])\r",
							"});\r",
							"\r",
							"pm.test(\"Param salary in 2 years is matches\", function () {\r",
							"    pm.expect(req_salary*2).to.be.eql(+resp_salary[1])\r",
							"});\r",
							"\r",
							"pm.test(\"Param salary in 3 years is matches\", function () {\r",
							"    pm.expect(req_salary*3).to.be.eql(+resp_salary[2])\r",
							"});\r",
							"\r",
							"pm.variables.set(\"name\")\r",
							"pm.variables.set(\"age\")\r",
							"pm.variables.set(\"salary\")\r",
							"pm.variables.set(\"name\", \"Ruslan\")\r",
							"pm.variables.set(\"age\", 31)\r",
							"pm.variables.set(\"salary\", 2400)\r",
							"\r",
							"for(let element of resp_salary) {\r",
							"  console.log(+element);\r",
							"};"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Ruslan&age=45&salary=4000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Ruslan"
						},
						{
							"key": "age",
							"value": "45"
						},
						{
							"key": "salary",
							"value": "4000"
						}
					]
				}
			},
			"response": [
				{
					"name": "object_info_4_test",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://162.55.220.72:5005/object_info_4?name=Ruslan&age=45&salary=4000",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"object_info_4"
							],
							"query": [
								{
									"key": "name",
									"value": "Ruslan"
								},
								{
									"key": "age",
									"value": "45"
								},
								{
									"key": "salary",
									"value": "4000"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "93"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Thu, 05 Jan 2023 11:15:30 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"age\": 45,\n    \"name\": \"Ruslan\",\n    \"salary\": [\n        4000,\n        \"8000\",\n        \"12000\"\n    ]\n}"
				}
			]
		},
		{
			"name": "user_info_2_test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.variables.get(\"name\")\r",
							"pm.variables.get(\"age\")\r",
							"pm.variables.get(\"salary\")\r",
							"req_f = request.data\r",
							"resp_f = pm.response.json()\r",
							"let resp_person = resp_f.person\r",
							"let resp_keys = Object.keys(resp_f.person)\r",
							"let resp_values = Object.values(resp_f.person)\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response have property start_qa_salary\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response have property qa_salary_after_6_months\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response have property qa_salary_after_12_months\", function (){\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response have property qa_salary_after_1.5_year\", function (){\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"Responce have property qa_salary_after_3.5_years\", function (){\r",
							"    pm.expect(resp_f).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"Responce have property person\", function () {\r",
							"    pm.expect(resp_f).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"pm.test(\"start_qa_salary is equal to salary\", function () {\r",
							"    pm.expect(resp_f.start_qa_salary).to.be.eql(+req_f.salary)\r",
							"})\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months is equal to salary * 2\", function () {\r",
							"    pm.expect(resp_f.qa_salary_after_6_months).to.be.eql(+req_f.salary * 2)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months is equal to salary * 2.7\", function () {\r",
							"    pm.expect(resp_f.qa_salary_after_12_months).to.be.eql(+req_f.salary * 2.7)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_1.5_year is equal to salary * 3.3\", function () {\r",
							"    pm.expect(resp_f[\"qa_salary_after_1.5_year\"]).to.be.eql(+req_f.salary * 3.3)\r",
							"});\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years is equal to salary * 3.8\", function () {\r",
							"    pm.expect(resp_f[\"qa_salary_after_3.5_years\"]).to.be.eql(+req_f.salary * 3.8)\r",
							"});\r",
							"\r",
							"pm.test(\"u_name is equal to salary\", function () {\r",
							"    pm.expect(resp_f.person.u_name[1]).to.be.eql(+req_f.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"u_salary_5_years is equal salary * 4.2\", function () {\r",
							"    pm.expect(resp_f.person.u_salary_5_years).to.be.eql(+req_f.salary * 4.2)\r",
							"});\r",
							"\r",
							"for (key in resp_f.person) {\r",
							"    console.log(key, resp_f.person[key])\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": [
				{
					"name": "user_info_2_test",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{name}}",
									"type": "text"
								},
								{
									"key": "age",
									"value": "{{age}}",
									"type": "text"
								},
								{
									"key": "salary",
									"value": "{{salary}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://162.55.220.72:5005/user_info_2",
							"protocol": "http",
							"host": [
								"162",
								"55",
								"220",
								"72"
							],
							"port": "5005",
							"path": [
								"user_info_2"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "319"
						},
						{
							"key": "Server",
							"value": "Werkzeug/2.0.1 Python/3.8.10"
						},
						{
							"key": "Date",
							"value": "Sat, 07 Jan 2023 08:44:20 GMT"
						}
					],
					"cookie": [],
					"body": "{\n    \"person\": {\n        \"u_age\": 31,\n        \"u_name\": [\n            \"Ruslan\",\n            2400,\n            31\n        ],\n        \"u_salary_5_years\": 10080\n    },\n    \"qa_salary_after_1.5_year\": 7920,\n    \"qa_salary_after_12_months\": 6480,\n    \"qa_salary_after_3.5_years\": 9120,\n    \"qa_salary_after_6_months\": 4800,\n    \"start_qa_salary\": 2400\n}"
				}
			]
		}
	]
}